apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-zone-api
  namespace: rack-resiliency
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-zone-api
  template:
    metadata:
      labels:
        app: k8s-zone-api
    spec:
      serviceAccountName: k8s-zone-reader
      containers:
      - name: k8s-zone-api
        image: library/base:1.1
        imagePullPolicy: Never
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        volumeMounts:
        - name: k8s-api-access
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        - name: ceph-config
          mountPath: /etc/ceph
          readOnly: true
        - name: critical-svc
          mountPath: /etc/config
          subPath: critical-service-config.json
          readOnly: false
        - name: ssh-config
          mountPath: /etc/ssh
          readOnly: true
        - name: ssh-hp
          mountPath: /root/.ssh
          readOnly: true
      volumes:
      - name: ssh-config
        hostPath:
          path: /etc/ssh
          type: Directory
      - name: ssh-hp
        hostPath:
          path: /root/.ssh
          type: Directory
      - name: ceph-config
        configMap:
          name: ceph-admin-config
      - name: critical-svc
        configMap:
          name: rrs-map
      - name: k8s-api-access
        projected:
          sources:
          - serviceAccountToken:
              path: token
          - configMap:
              name: kube-root-ca.crt
              items:
              - key: ca.crt
                path: ca.crt

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-zone-api
  namespace: rack-resiliency
spec:
  selector:
    app: k8s-zone-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-zone-reader
  namespace: rack-resiliency
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-zone-role
  namespace: rack-resiliency
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["nodes", "services", "pods", "configmaps"]
  verbs: ["get", "list", "watch", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-zone-rolebinding
  namespace: rack-resiliency
subjects:
- kind: ServiceAccount
  name: k8s-zone-reader
  namespace: rack-resiliency
roleRef:
  kind: ClusterRole
  name: k8s-zone-role
  apiGroup: rbac.authorization.k8s.io